name: Fitness Tracker CI/CD

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'bugfix/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Install backend dependencies
      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      # Lint code with ESLint
      - name: Run ESLint
        run: |
          cd backend
          npx eslint . --ext .js
          cd ../frontend
          npx eslint src --ext .js,.jsx

      # Run backend tests (Mocha/Chai)
      - name: Run backend tests
        run: |
          cd backend
          npm test
        env:
          MONGODB_URI: mongodb://localhost:27017/fitness-tracker-test
          JWT_SECRET: test-secret

      # Run frontend tests (Jest)
      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --coverage

      # Upload coverage report
      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          files: ./frontend/coverage/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t fitness-tracker:latest -f deploy/Dockerfile .

      # Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker tag fitness-tracker:latest ${{ secrets.DOCKER_USERNAME }}/fitness-tracker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fitness-tracker:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Deploy to AWS Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          npm install -g aws-cli
          eb init -p docker fitness-tracker --region us-east-1
          eb deploy fitness-tracker-env
        env:
          AWS_DEFAULT_REGION: us-east-1
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
