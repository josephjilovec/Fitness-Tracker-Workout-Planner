# AWS Elastic Beanstalk configuration for Fitness Tracker
version: 1
environment:
  # Environment name
  name: fitness-tracker-env
  # Platform for Dockerized Node.js application
  platform:
    arn: "arn:aws:elasticbeanstalk:us-east-1::platform/Docker running on 64bit Amazon Linux 2023/4.0.0"
  # Tier for web server
  tier:
    Name: WebServer
    Type: Standard
  # Instance type configuration
  instance_type: t3.medium
  # EC2 instance settings
  instance_settings:
    MinInstances: 1
    MaxInstances: 2
    InstanceTypes:
      - t3.medium
  # Auto-scaling configuration
  auto_scaling:
    MinSize: 1
    MaxSize: 4
    TargetGroupARN: "arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/fitness-tracker-tg/abcdef1234567890"
    ScalingPolicies:
      - PolicyName: CPUUtilizationScaling
        MetricType: CPUUtilization
        TargetValue: 70.0
        Cooldown: 300
        AdjustmentType: ChangeInCapacity
        MinAdjustmentMagnitude: 1
  # Environment variables for Node.js and MongoDB
  environment_variables:
    NODE_ENV: production
    PORT: "5000"
    MONGODB_URI: "mongodb://<your-mongodb-uri>"
    JWT_SECRET: "your_jwt_secret"
# S3 configuration for static assets (e.g., frontend build, media uploads)
s3:
  bucket:
    name: fitness-tracker-assets
    region: us-east-1
    # Bucket policy for public read access (e.g., for images/videos)
    policy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": "*",
            "Action": "s3:GetObject",
            "Resource": "arn:aws:s3:::fitness-tracker-assets/*"
          }
        ]
      }
# Docker configuration
docker:
  # Reference to the Dockerfile
  image:
    name: fitness-tracker
    tag: latest
  # Port mapping for Express server
  ports:
    - containerPort: 5000
      hostPort: 5000
  # Mount volumes for persistent data (optional)
  volumes:
    - name: uploads
      host:
        sourcePath: /app/public/uploads
# Elastic Load Balancer configuration
load_balancer:
  Type: application
  Listeners:
    - Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupARN: "arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/fitness-tracker-tg/abcdef1234567890"
# Security group configuration
security_groups:
  - Name: fitness-tracker-sg
    Rules:
      - Protocol: TCP
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - Protocol: TCP
        FromPort: 5000
        ToPort: 5000
        CidrIp: 0.0.0.0/0
# IAM role for EC2 instances
iam_role:
  RoleName: fitness-tracker-role
  ManagedPolicyArns:
    - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
    - "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkWebTier"
